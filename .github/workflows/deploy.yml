name: Deploy
on: ['deployment']

jobs:
  deployment:
    runs-on: 'ubuntu-latest'
    env:
      PACKAGE_NAME: '@tct/web-ui-booking'
      AWS_S3_BUCKET: ${{ secrets[format('AWS_S3_BUCKET_{0}', github.event.deployment.environment )] }}
      AWS_ACCESS_KEY_ID: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', github.event.deployment.environment )] }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', github.event.deployment.environment )] }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      SCRIPTS_FOLDER: book_dist
      NGSW_FILES_FOLDER: book
      OWNERS: ${{ secrets.OWNERS }}

    steps:

    - uses: actions/checkout@v2
      with:
        ref: ${{ github.sha }}
      if: contains(env.OWNERS, github.actor)

    - name: 'Deployment pending'
      uses: 'deliverybot/deployment-status@master'
      with:
        state: 'pending'
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Compute SOURCE_DIR variable
      run: |
        export SOURCE_DIR=`npm get prefix`/lib/node_modules/$PACKAGE_NAME/dist/app
        echo "::set-env name=SOURCE_DIR::$SOURCE_DIR"
    - name: 'Deployment success'
      if: success()
      uses: 'deliverybot/deployment-status@master'
      with:
        state: 'success'
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Deployment failure'
      if: failure()
      uses: 'deliverybot/deployment-status@master'
      with:
        state: 'failure'
        token: ${{ secrets.GITHUB_TOKEN }}
